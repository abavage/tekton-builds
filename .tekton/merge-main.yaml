apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: merge-main
  annotations:
    # This PipelineRun executes when PR's are merged to main

    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[push]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[main]"

    # Fetch the git-clone task from hub, we are able to reference later on it
    # with taskRef and it will automatically be embedded into our pipeline.
    ##pipelinesascode.tekton.dev/task: "git-clone:0.10.0"

    # Use golangci-lint from the hub to test our Golang project
    ##pipelinesascode.tekton.dev/task-1: "buildah:0.8.0"

    # You can add more tasks by increasing the suffix number, you can specify
    # them as array to have multiple of them.
    # browse the tasks you want to include from hub on https://hub.tekton.dev/
    #
    # pipelinesascode.tekton.dev/task-2: "[curl, buildah]"

    # how many runs we want to keep attached to this event
    ##pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    # The variable with brackets are special to Pipelines as Code
    # They will automatically be expanded with the events from Github.
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: base_image
      value: "quay.io/abavage/base-image/base-image:latest"
    - name: bucket
      value: "one-openshift-pipeline-image-builds"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      #- name: IMAGE
      #- name: CONTAINERFILE_PATH
    workspaces:
      - name: source
      - name: basic-auth
    
    tasks:
      - name: copy-git-sha-from-s3
        taskSpec:
          steps:
            - name: copy-git-sha-from-s3
              image: "$(params.base_image)"
              script: |
                #!/bin/bash

                RELEASE=$(params.revision)
                BUCKET=$(params.bucket)

                aws s3 cp s3://$BUCKET/image-build-git-sha.txt /workspace/source/image-build-git-sha.txt

                cat /workspace/source/image-build-git-sha.txt
        workspaces:
          - name: source
            workspace: source
        #runAfter:
        #- test-image
      
  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    # This workspace will inject secret to help the git-clone task to be able to
    # checkout the private repositories
    - name: basic-auth
      secret:
        secretName: "{{ git_auth_secret }}"
